package test.位运算.easy;

/**
 * Created by mengyue on 2018/8/30.
 */
public class 两整数之和 {


    /**
     * 不使用运算符 + 和 - ​​​​​​​，计算两整数 ​​​​​​​a 、b ​​​​​​​之和。
     * <p>
     * 示例 1:
     * <p>
     * 输入: a = 1, b = 2
     * 输出: 3
     * 示例 2:
     * <p>
     * 输入: a = -2, b = 3
     * 输出: 1
     *
     * @param args
     */

    /**
     *
     * 举个例子 5 + 7 ==> 0101 + 0111
     *
     * 正常人加的时候会有一下几种情况 1+1=11 1+0=1 0+1=1 0+0=0
     *
     * (a & b) << 1 相当于把进位的数算了出来 例如 0101 + 0111 的进位是 1010 因为 下标为2的位置都是1 以及下标为4的位置也都是1
     *  0101
     *  0111
     * >1010
     *
     * ---------------------------------------------------------------------------------------------------------
     * a ^ b 相当于找出不进位的数算了出来 例如 0101 + 0111 不进为的是 0010
     *  0101
     *  0111
     * >0010
     *
     * 然后一直循环 直到 进位的数为0为止 , 因为两数相加最终进位会进完 , 也就结束
     *
     * @param args
     */

    public static void main(String[] args) {
        int a = 3;
        int b = 5;
        System.out.println(getSum(a, b));
    }

    public static int getSum(int a, int b) {
        while (a != 0) {
            int tmp = (a & b) << 1;
            b = a ^ b;
            a = tmp;
        }
        return b;
    }

}
